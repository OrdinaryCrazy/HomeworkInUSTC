// Generated from C1Lexer.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class C1Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		Comma=1, SemiColon=2, Assign=3, LeftBracket=4, RightBracket=5, LeftBrace=6, 
		RightBrace=7, LeftParen=8, RightParen=9, If=10, Else=11, While=12, Const=13, 
		Equal=14, NonEqual=15, Less=16, Greater=17, LessEqual=18, GreaterEqual=19, 
		Plus=20, Minus=21, Multiply=22, Divide=23, Modulo=24, Int=25, Float=26, 
		Void=27, Identifier=28, IntConst=29, FloatConst=30, WhiteSpace=31, Comment=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"Comma", "SemiColon", "Assign", "LeftBracket", "RightBracket", "LeftBrace", 
		"RightBrace", "LeftParen", "RightParen", "If", "Else", "While", "Const", 
		"Equal", "NonEqual", "Less", "Greater", "LessEqual", "GreaterEqual", "Plus", 
		"Minus", "Multiply", "Divide", "Modulo", "Int", "Float", "Void", "Identifier", 
		"FloatConst", "IntConst", "WhiteSpace", "Comment", "OTHERS", "Nochangline"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "','", "';'", "'='", "'['", "']'", "'{'", "'}'", "'('", "')'", "'if'", 
		"'else'", "'while'", "'const'", "'=='", null, "'<'", "'>'", "'<='", "'>='", 
		"'+'", "'-'", "'*'", "'/'", "'%'", "'int'", "'float'", "'void'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "Comma", "SemiColon", "Assign", "LeftBracket", "RightBracket", "LeftBrace", 
		"RightBrace", "LeftParen", "RightParen", "If", "Else", "While", "Const", 
		"Equal", "NonEqual", "Less", "Greater", "LessEqual", "GreaterEqual", "Plus", 
		"Minus", "Multiply", "Divide", "Modulo", "Int", "Float", "Void", "Identifier", 
		"IntConst", "FloatConst", "WhiteSpace", "Comment"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public C1Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "C1Lexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\"\u01a8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b"+
		"\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\20"+
		"\3\20\5\20u\n\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25"+
		"\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\6\35\u009b\n\35"+
		"\r\35\16\35\u009c\3\35\7\35\u00a0\n\35\f\35\16\35\u00a3\13\35\3\36\6\36"+
		"\u00a6\n\36\r\36\16\36\u00a7\3\36\3\36\3\36\7\36\u00ad\n\36\f\36\16\36"+
		"\u00b0\13\36\5\36\u00b2\n\36\3\36\3\36\5\36\u00b6\n\36\3\36\6\36\u00b9"+
		"\n\36\r\36\16\36\u00ba\5\36\u00bd\n\36\3\36\6\36\u00c0\n\36\r\36\16\36"+
		"\u00c1\5\36\u00c4\n\36\3\36\3\36\6\36\u00c8\n\36\r\36\16\36\u00c9\3\36"+
		"\3\36\5\36\u00ce\n\36\3\36\6\36\u00d1\n\36\r\36\16\36\u00d2\5\36\u00d5"+
		"\n\36\3\36\6\36\u00d8\n\36\r\36\16\36\u00d9\3\36\3\36\5\36\u00de\n\36"+
		"\3\36\6\36\u00e1\n\36\r\36\16\36\u00e2\3\36\3\36\3\36\3\36\5\36\u00e9"+
		"\n\36\3\36\6\36\u00ec\n\36\r\36\16\36\u00ed\3\36\3\36\5\36\u00f2\n\36"+
		"\3\36\6\36\u00f5\n\36\r\36\16\36\u00f6\3\36\3\36\3\36\3\36\5\36\u00fd"+
		"\n\36\3\36\6\36\u0100\n\36\r\36\16\36\u0101\3\36\3\36\3\36\7\36\u0107"+
		"\n\36\f\36\16\36\u010a\13\36\5\36\u010c\n\36\3\36\3\36\5\36\u0110\n\36"+
		"\3\36\6\36\u0113\n\36\r\36\16\36\u0114\3\36\3\36\3\36\3\36\5\36\u011b"+
		"\n\36\3\36\6\36\u011e\n\36\r\36\16\36\u011f\5\36\u0122\n\36\3\36\3\36"+
		"\6\36\u0126\n\36\r\36\16\36\u0127\3\36\3\36\5\36\u012c\n\36\3\36\6\36"+
		"\u012f\n\36\r\36\16\36\u0130\5\36\u0133\n\36\3\37\3\37\7\37\u0137\n\37"+
		"\f\37\16\37\u013a\13\37\3\37\3\37\6\37\u013e\n\37\r\37\16\37\u013f\3\37"+
		"\3\37\3\37\3\37\5\37\u0146\n\37\3\37\6\37\u0149\n\37\r\37\16\37\u014a"+
		"\3\37\5\37\u014e\n\37\3 \6 \u0151\n \r \16 \u0152\3 \3 \3!\3!\3!\3!\7"+
		"!\u015b\n!\f!\16!\u015e\13!\3!\3!\3!\3!\3!\3!\7!\u0166\n!\f!\16!\u0169"+
		"\13!\7!\u016b\n!\f!\16!\u016e\13!\3!\5!\u0171\n!\3!\3!\3!\3!\7!\u0177"+
		"\n!\f!\16!\u017a\13!\3!\6!\u017d\n!\r!\16!\u017e\3!\7!\u0182\n!\f!\16"+
		"!\u0185\13!\7!\u0187\n!\f!\16!\u018a\13!\3!\3!\3!\3!\7!\u0190\n!\f!\16"+
		"!\u0193\13!\3!\3!\3!\3!\7!\u0199\n!\f!\16!\u019c\13!\3!\5!\u019f\n!\5"+
		"!\u01a1\n!\3!\3!\3\"\3\"\3#\3#\2\2$\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n"+
		"\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36; =\37?!A\"C\2E\2\3\2\16\5\2C\\aac|\6"+
		"\2\62;C\\aac|\3\2\62;\4\2GGgg\4\2--//\5\2\62;CHch\4\2RRrr\3\2\63;\3\2"+
		"\629\5\2\13\f\17\17\"\"\4\2,,\61\61\4\2\f\f^^\2\u01e1\2\3\3\2\2\2\2\5"+
		"\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2"+
		"\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33"+
		"\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2"+
		"\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2"+
		"\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2"+
		"\2?\3\2\2\2\2A\3\2\2\2\3G\3\2\2\2\5I\3\2\2\2\7K\3\2\2\2\tM\3\2\2\2\13"+
		"O\3\2\2\2\rQ\3\2\2\2\17S\3\2\2\2\21U\3\2\2\2\23W\3\2\2\2\25Y\3\2\2\2\27"+
		"\\\3\2\2\2\31a\3\2\2\2\33g\3\2\2\2\35m\3\2\2\2\37t\3\2\2\2!v\3\2\2\2#"+
		"x\3\2\2\2%z\3\2\2\2\'}\3\2\2\2)\u0080\3\2\2\2+\u0082\3\2\2\2-\u0084\3"+
		"\2\2\2/\u0086\3\2\2\2\61\u0088\3\2\2\2\63\u008a\3\2\2\2\65\u008e\3\2\2"+
		"\2\67\u0094\3\2\2\29\u009a\3\2\2\2;\u0132\3\2\2\2=\u014d\3\2\2\2?\u0150"+
		"\3\2\2\2A\u01a0\3\2\2\2C\u01a4\3\2\2\2E\u01a6\3\2\2\2GH\7.\2\2H\4\3\2"+
		"\2\2IJ\7=\2\2J\6\3\2\2\2KL\7?\2\2L\b\3\2\2\2MN\7]\2\2N\n\3\2\2\2OP\7_"+
		"\2\2P\f\3\2\2\2QR\7}\2\2R\16\3\2\2\2ST\7\177\2\2T\20\3\2\2\2UV\7*\2\2"+
		"V\22\3\2\2\2WX\7+\2\2X\24\3\2\2\2YZ\7k\2\2Z[\7h\2\2[\26\3\2\2\2\\]\7g"+
		"\2\2]^\7n\2\2^_\7u\2\2_`\7g\2\2`\30\3\2\2\2ab\7y\2\2bc\7j\2\2cd\7k\2\2"+
		"de\7n\2\2ef\7g\2\2f\32\3\2\2\2gh\7e\2\2hi\7q\2\2ij\7p\2\2jk\7u\2\2kl\7"+
		"v\2\2l\34\3\2\2\2mn\7?\2\2no\7?\2\2o\36\3\2\2\2pq\7#\2\2qu\7?\2\2rs\7"+
		">\2\2su\7@\2\2tp\3\2\2\2tr\3\2\2\2u \3\2\2\2vw\7>\2\2w\"\3\2\2\2xy\7@"+
		"\2\2y$\3\2\2\2z{\7>\2\2{|\7?\2\2|&\3\2\2\2}~\7@\2\2~\177\7?\2\2\177(\3"+
		"\2\2\2\u0080\u0081\7-\2\2\u0081*\3\2\2\2\u0082\u0083\7/\2\2\u0083,\3\2"+
		"\2\2\u0084\u0085\7,\2\2\u0085.\3\2\2\2\u0086\u0087\7\61\2\2\u0087\60\3"+
		"\2\2\2\u0088\u0089\7\'\2\2\u0089\62\3\2\2\2\u008a\u008b\7k\2\2\u008b\u008c"+
		"\7p\2\2\u008c\u008d\7v\2\2\u008d\64\3\2\2\2\u008e\u008f\7h\2\2\u008f\u0090"+
		"\7n\2\2\u0090\u0091\7q\2\2\u0091\u0092\7c\2\2\u0092\u0093\7v\2\2\u0093"+
		"\66\3\2\2\2\u0094\u0095\7x\2\2\u0095\u0096\7q\2\2\u0096\u0097\7k\2\2\u0097"+
		"\u0098\7f\2\2\u00988\3\2\2\2\u0099\u009b\t\2\2\2\u009a\u0099\3\2\2\2\u009b"+
		"\u009c\3\2\2\2\u009c\u009a\3\2\2\2\u009c\u009d\3\2\2\2\u009d\u00a1\3\2"+
		"\2\2\u009e\u00a0\t\3\2\2\u009f\u009e\3\2\2\2\u00a0\u00a3\3\2\2\2\u00a1"+
		"\u009f\3\2\2\2\u00a1\u00a2\3\2\2\2\u00a2:\3\2\2\2\u00a3\u00a1\3\2\2\2"+
		"\u00a4\u00a6\t\4\2\2\u00a5\u00a4\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7\u00a5"+
		"\3\2\2\2\u00a7\u00a8\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00aa\7\60\2\2"+
		"\u00aa\u00b1\3\2\2\2\u00ab\u00ad\t\4\2\2\u00ac\u00ab\3\2\2\2\u00ad\u00b0"+
		"\3\2\2\2\u00ae\u00ac\3\2\2\2\u00ae\u00af\3\2\2\2\u00af\u00b2\3\2\2\2\u00b0"+
		"\u00ae\3\2\2\2\u00b1\u00ae\3\2\2\2\u00b1\u00b2\3\2\2\2\u00b2\u00bc\3\2"+
		"\2\2\u00b3\u00b5\t\5\2\2\u00b4\u00b6\t\6\2\2\u00b5\u00b4\3\2\2\2\u00b5"+
		"\u00b6\3\2\2\2\u00b6\u00b8\3\2\2\2\u00b7\u00b9\t\4\2\2\u00b8\u00b7\3\2"+
		"\2\2\u00b9\u00ba\3\2\2\2\u00ba\u00b8\3\2\2\2\u00ba\u00bb\3\2\2\2\u00bb"+
		"\u00bd\3\2\2\2\u00bc\u00b3\3\2\2\2\u00bc\u00bd\3\2\2\2\u00bd\u0133\3\2"+
		"\2\2\u00be\u00c0\t\4\2\2\u00bf\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1"+
		"\u00bf\3\2\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00c4\3\2\2\2\u00c3\u00bf\3\2"+
		"\2\2\u00c3\u00c4\3\2\2\2\u00c4\u00c5\3\2\2\2\u00c5\u00c7\7\60\2\2\u00c6"+
		"\u00c8\t\4\2\2\u00c7\u00c6\3\2\2\2\u00c8\u00c9\3\2\2\2\u00c9\u00c7\3\2"+
		"\2\2\u00c9\u00ca\3\2\2\2\u00ca\u00d4\3\2\2\2\u00cb\u00cd\t\5\2\2\u00cc"+
		"\u00ce\t\6\2\2\u00cd\u00cc\3\2\2\2\u00cd\u00ce\3\2\2\2\u00ce\u00d0\3\2"+
		"\2\2\u00cf\u00d1\t\4\2\2\u00d0\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2"+
		"\u00d0\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3\u00d5\3\2\2\2\u00d4\u00cb\3\2"+
		"\2\2\u00d4\u00d5\3\2\2\2\u00d5\u0133\3\2\2\2\u00d6\u00d8\t\4\2\2\u00d7"+
		"\u00d6\3\2\2\2\u00d8\u00d9\3\2\2\2\u00d9\u00d7\3\2\2\2\u00d9\u00da\3\2"+
		"\2\2\u00da\u00db\3\2\2\2\u00db\u00dd\t\5\2\2\u00dc\u00de\t\6\2\2\u00dd"+
		"\u00dc\3\2\2\2\u00dd\u00de\3\2\2\2\u00de\u00e0\3\2\2\2\u00df\u00e1\t\4"+
		"\2\2\u00e0\u00df\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e2\u00e0\3\2\2\2\u00e2"+
		"\u00e3\3\2\2\2\u00e3\u0133\3\2\2\2\u00e4\u00e5\7\62\2\2\u00e5\u00e9\7"+
		"z\2\2\u00e6\u00e7\7\62\2\2\u00e7\u00e9\7Z\2\2\u00e8\u00e4\3\2\2\2\u00e8"+
		"\u00e6\3\2\2\2\u00e9\u00eb\3\2\2\2\u00ea\u00ec\t\7\2\2\u00eb\u00ea\3\2"+
		"\2\2\u00ec\u00ed\3\2\2\2\u00ed\u00eb\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee"+
		"\u00ef\3\2\2\2\u00ef\u00f1\t\b\2\2\u00f0\u00f2\t\6\2\2\u00f1\u00f0\3\2"+
		"\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f4\3\2\2\2\u00f3\u00f5\t\4\2\2\u00f4"+
		"\u00f3\3\2\2\2\u00f5\u00f6\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2"+
		"\2\2\u00f7\u0133\3\2\2\2\u00f8\u00f9\7\62\2\2\u00f9\u00fd\7z\2\2\u00fa"+
		"\u00fb\7\62\2\2\u00fb\u00fd\7Z\2\2\u00fc\u00f8\3\2\2\2\u00fc\u00fa\3\2"+
		"\2\2\u00fd\u00ff\3\2\2\2\u00fe\u0100\t\7\2\2\u00ff\u00fe\3\2\2\2\u0100"+
		"\u0101\3\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102\3\2\2\2\u0102\u0103\3\2"+
		"\2\2\u0103\u0104\7\60\2\2\u0104\u010b\3\2\2\2\u0105\u0107\t\7\2\2\u0106"+
		"\u0105\3\2\2\2\u0107\u010a\3\2\2\2\u0108\u0106\3\2\2\2\u0108\u0109\3\2"+
		"\2\2\u0109\u010c\3\2\2\2\u010a\u0108\3\2\2\2\u010b\u0108\3\2\2\2\u010b"+
		"\u010c\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010f\t\b\2\2\u010e\u0110\t\6"+
		"\2\2\u010f\u010e\3\2\2\2\u010f\u0110\3\2\2\2\u0110\u0112\3\2\2\2\u0111"+
		"\u0113\t\4\2\2\u0112\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0112\3\2"+
		"\2\2\u0114\u0115\3\2\2\2\u0115\u0133\3\2\2\2\u0116\u0117\7\62\2\2\u0117"+
		"\u011b\7z\2\2\u0118\u0119\7\62\2\2\u0119\u011b\7Z\2\2\u011a\u0116\3\2"+
		"\2\2\u011a\u0118\3\2\2\2\u011b\u0121\3\2\2\2\u011c\u011e\t\7\2\2\u011d"+
		"\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u011d\3\2\2\2\u011f\u0120\3\2"+
		"\2\2\u0120\u0122\3\2\2\2\u0121\u011d\3\2\2\2\u0121\u0122\3\2\2\2\u0122"+
		"\u0123\3\2\2\2\u0123\u0125\7\60\2\2\u0124\u0126\t\7\2\2\u0125\u0124\3"+
		"\2\2\2\u0126\u0127\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128"+
		"\u0129\3\2\2\2\u0129\u012b\t\b\2\2\u012a\u012c\t\6\2\2\u012b\u012a\3\2"+
		"\2\2\u012b\u012c\3\2\2\2\u012c\u012e\3\2\2\2\u012d\u012f\t\4\2\2\u012e"+
		"\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130\u012e\3\2\2\2\u0130\u0131\3\2"+
		"\2\2\u0131\u0133\3\2\2\2\u0132\u00a5\3\2\2\2\u0132\u00c3\3\2\2\2\u0132"+
		"\u00d7\3\2\2\2\u0132\u00e8\3\2\2\2\u0132\u00fc\3\2\2\2\u0132\u011a\3\2"+
		"\2\2\u0133<\3\2\2\2\u0134\u0138\t\t\2\2\u0135\u0137\t\4\2\2\u0136\u0135"+
		"\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139"+
		"\u014e\3\2\2\2\u013a\u0138\3\2\2\2\u013b\u013d\7\62\2\2\u013c\u013e\t"+
		"\n\2\2\u013d\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u013d\3\2\2\2\u013f"+
		"\u0140\3\2\2\2\u0140\u014e\3\2\2\2\u0141\u0142\7\62\2\2\u0142\u0146\7"+
		"z\2\2\u0143\u0144\7\62\2\2\u0144\u0146\7Z\2\2\u0145\u0141\3\2\2\2\u0145"+
		"\u0143\3\2\2\2\u0146\u0148\3\2\2\2\u0147\u0149\t\7\2\2\u0148\u0147\3\2"+
		"\2\2\u0149\u014a\3\2\2\2\u014a\u0148\3\2\2\2\u014a\u014b\3\2\2\2\u014b"+
		"\u014e\3\2\2\2\u014c\u014e\7\62\2\2\u014d\u0134\3\2\2\2\u014d\u013b\3"+
		"\2\2\2\u014d\u0145\3\2\2\2\u014d\u014c\3\2\2\2\u014e>\3\2\2\2\u014f\u0151"+
		"\t\13\2\2\u0150\u014f\3\2\2\2\u0151\u0152\3\2\2\2\u0152\u0150\3\2\2\2"+
		"\u0152\u0153\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0155\b \2\2\u0155@\3\2"+
		"\2\2\u0156\u0157\7\61\2\2\u0157\u0158\7\61\2\2\u0158\u015c\3\2\2\2\u0159"+
		"\u015b\5E#\2\u015a\u0159\3\2\2\2\u015b\u015e\3\2\2\2\u015c\u015a\3\2\2"+
		"\2\u015c\u015d\3\2\2\2\u015d\u016c\3\2\2\2\u015e\u015c\3\2\2\2\u015f\u0160"+
		"\7\"\2\2\u0160\u0161\7^\2\2\u0161\u0162\3\2\2\2\u0162\u0163\7\f\2\2\u0163"+
		"\u0167\3\2\2\2\u0164\u0166\5E#\2\u0165\u0164\3\2\2\2\u0166\u0169\3\2\2"+
		"\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167"+
		"\3\2\2\2\u016a\u015f\3\2\2\2\u016b\u016e\3\2\2\2\u016c\u016a\3\2\2\2\u016c"+
		"\u016d\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016f\u0171\7\f"+
		"\2\2\u0170\u016f\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u01a1\3\2\2\2\u0172"+
		"\u0173\7\61\2\2\u0173\u0174\7,\2\2\u0174\u0188\3\2\2\2\u0175\u0177\7,"+
		"\2\2\u0176\u0175\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2\u0178"+
		"\u0179\3\2\2\2\u0179\u017c\3\2\2\2\u017a\u0178\3\2\2\2\u017b\u017d\5C"+
		"\"\2\u017c\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u017c\3\2\2\2\u017e"+
		"\u017f\3\2\2\2\u017f\u0183\3\2\2\2\u0180\u0182\7\61\2\2\u0181\u0180\3"+
		"\2\2\2\u0182\u0185\3\2\2\2\u0183\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184"+
		"\u0187\3\2\2\2\u0185\u0183\3\2\2\2\u0186\u0178\3\2\2\2\u0187\u018a\3\2"+
		"\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018b\3\2\2\2\u018a"+
		"\u0188\3\2\2\2\u018b\u018c\7,\2\2\u018c\u01a1\7\61\2\2\u018d\u0191\7\61"+
		"\2\2\u018e\u0190\5E#\2\u018f\u018e\3\2\2\2\u0190\u0193\3\2\2\2\u0191\u018f"+
		"\3\2\2\2\u0191\u0192\3\2\2\2\u0192\u0194\3\2\2\2\u0193\u0191\3\2\2\2\u0194"+
		"\u0195\7^\2\2\u0195\u0196\7\f\2\2\u0196\u019a\7\61\2\2\u0197\u0199\5E"+
		"#\2\u0198\u0197\3\2\2\2\u0199\u019c\3\2\2\2\u019a\u0198\3\2\2\2\u019a"+
		"\u019b\3\2\2\2\u019b\u019e\3\2\2\2\u019c\u019a\3\2\2\2\u019d\u019f\7\f"+
		"\2\2\u019e\u019d\3\2\2\2\u019e\u019f\3\2\2\2\u019f\u01a1\3\2\2\2\u01a0"+
		"\u0156\3\2\2\2\u01a0\u0172\3\2\2\2\u01a0\u018d\3\2\2\2\u01a1\u01a2\3\2"+
		"\2\2\u01a2\u01a3\b!\2\2\u01a3B\3\2\2\2\u01a4\u01a5\n\f\2\2\u01a5D\3\2"+
		"\2\2\u01a6\u01a7\n\r\2\2\u01a7F\3\2\2\2@\2t\u009a\u009c\u009f\u00a1\u00a7"+
		"\u00ae\u00b1\u00b5\u00ba\u00bc\u00c1\u00c3\u00c9\u00cd\u00d2\u00d4\u00d9"+
		"\u00dd\u00e2\u00e8\u00eb\u00ed\u00f1\u00f6\u00fc\u00ff\u0101\u0106\u0108"+
		"\u010b\u010f\u0114\u011a\u011d\u011f\u0121\u0125\u0127\u012b\u0130\u0132"+
		"\u0138\u013f\u0145\u0148\u014a\u014d\u0152\u015c\u0167\u016c\u0170\u0178"+
		"\u017e\u0183\u0188\u0191\u019a\u019e\u01a0\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}